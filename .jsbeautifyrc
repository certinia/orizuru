{
	"js": {
		"allowed_file_extensions": ["js", "json", "jshintrc", "jsbeautifyrc"],
		"brace_style": "collapse,preserve-inline",
		"break_chained_methods": false, // Break chained method calls across subsequent lines
		"e4x": false, // Pass E4X xml literals through untouched
		"end_with_newline": true, // End output with newline
		"indent_level": 0, // Initial indentation level
		"indent_with_tabs": true, // Indent with tabs, overrides `indent_size` and `indent_char`
		"jslint_happy": false, // If true, then jslint-stricter mode is enforced
		"keep_array_indentation": false, // Preserve array indentation
		"keep_function_indentation": false, // Preserve function indentation
		"max_preserve_newlines": 0, // Maximum number of line breaks to be preserved in one chunk (0 disables)
		"preserve_newlines": true, // Whether existing line breaks should be preserved
		"space_after_anon_function": true, // Should the space before an anonymous function's parens be added, "function()" vs "function ()"
		"space_before_conditional": true, // Should the space before conditional statement be added, "if(true)" vs "if (true)"
		"space_in_empty_paren": false, // Add padding spaces within empty paren, "f()" vs "f( )"
		"space_in_paren": false, // Add padding spaces within paren, ie. f( a, b )
		"unescape_strings": false, // Should printable characters in strings encoded in \xNN notation be unescaped, "example" vs "\x65\x78\x61\x6d\x70\x6c\x65"
		"wrap_line_length": 0 // Lines should wrap at next opportunity after this number of characters (0 disables)
	}
}